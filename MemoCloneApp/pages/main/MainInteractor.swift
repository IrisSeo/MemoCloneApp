//
//  MainInteractor.swift
//  MemoCloneApp
//
//  Created by MUN JEONG SEO on 2021/02/22.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase
import FirebaseDatabase
import FirebaseAuth
//import RxSwift

protocol MainBusinessLogic {
    func requestAutoSignIn()
    func signInUser(request: Main.로그인.Request)
    func signOut()
    func registerUser(request: Main.회원가입.Request)
}

protocol MainDataStore {
    //var name: String { get set }
}

class MainInteractor: MainBusinessLogic, MainDataStore {
    var presenter: MainPresentationLogic?
    var worker = MainWorker()
    
    //let disposeBag = DisposeBag() //MARK: 나중에 회원가입쪽 flatMap으로 바꾸기
    
    // MARK: Do something
    
    func requestAutoSignIn() {
        worker.requestAutoSignIn() {(user: User?, error: CustomError?) -> Void in
            //자동 로그인
            if let user = user {
                // -성공
                self.presenter?.presentAutoSignIn(response: Main.앱진입.Response.init(autoSign: Main.SignInStatus.init(status: true, currentUserId: user.email)))
            } else {
                // -실패
                self.presenter?.presentAutoSignIn(response: Main.앱진입.Response.init(autoSign: Main.SignInStatus.init(status: false)))
            }
        }
    }
    
    func registerUser(request: Main.회원가입.Request) {
        worker.registerUser(id: request.userAccount.id, pw: request.userAccount.pw, completionHandler: { (authResult, error) -> Void in
            //회원가입
            // -실패
            guard error == nil else {
                self.presenter?.presentRegister(response: Main.회원가입.Response.init(isRegisterSuccess: false))
                return
            }
            
            // -성공
            guard let authUser = authResult?.user else { return }
            print("\(authUser)님 회원가입 완료")
            
            //자동 로그인
            self.worker.requestAutoSignIn() {(user: User?, error: CustomError?) -> Void in
                if let user = user {
                    self.presenter?.presentRegister(response: .init(isRegisterSuccess: true, signIn: Main.SignInStatus.init(status: true, currentUserId: user.email)))
                } else {
                    self.presenter?.presentRegister(response: .init(isRegisterSuccess: true))
                }
            }
        })
    }
    
    func signInUser(request: Main.로그인.Request) {
        worker.signInUser(id: request.userAccount.id, pw: request.userAccount.pw, completionHandler: {(authResult, error) -> Void in
            //로그인
            var response = Main.로그인.Response()
            
            guard let user = authResult?.user else {
                if error != nil {
                    // -실패
                    response.signIn = Main.SignInStatus(status: false)
                    self.presenter?.presentSignIn(response: response)
                }
                return
            }
            
            // -성공
            response.signIn = Main.SignInStatus(status: true, currentUserId: user.email)
            self.presenter?.presentSignIn(response: response)
        })
    }
    
    func signOut() {
        worker.signOut(completionHandler: {(isSignOuted, error) in
            //로그아웃
            if isSignOuted {
                // -성공
                self.presenter?.presentSignOut(response: Main.로그아웃.Response.init(signOut: true))
            } else {
                // -실패
                self.presenter?.presentSignOut(response: Main.로그아웃.Response.init(signOut: false))
            }
        })
    }
}
