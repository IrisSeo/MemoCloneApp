//
//  MemoListInteractor.swift
//  MemoCloneApp
//
//  Created by MUN JEONG SEO on 2021/02/08.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase

protocol MemoListBusinessLogic {
  func requestMemoList()
}

protocol MemoListDataStore {
  //var name: String { get set }
}

class MemoListInteractor: MemoListBusinessLogic, MemoListDataStore {
  var presenter: MemoListPresentationLogic?
  var worker: MemoListWorker?
  //var name: String = ""
  
  // MARK: Do something
  
    func requestMemoList() {
        guard let uid = Auth.auth().currentUser?.uid else {
            return
        }
        
        let ref = Database.database().reference().child("user-memo/\(uid)")
        ref.observeSingleEvent(of: .value, with: { (snapshot) in
            
            if let dictionaryArray = snapshot.value as? [[String: AnyObject]] {
                print("메모 조회 성꽁")
                
                var memoArray: [MemoData]?
                for data in dictionaryArray {
                    let formedData = MemoData(dictionary: data)
                    memoArray?.append(formedData)
                }
                
                //데이터 뿌리기
                //present
            } else {
                print("메모 조회 실패: 저장된 메모 리스트 없음")
            }
            
            }, withCancel: nil)
        
        //MARK: 파이어베이스 에러 // Extraneous whitespace after '.' is not permitted
        /*ref.child("user-memo/\(uid)"). getData { (error, snapshot) in
            if let error = error {
                print("Error getting data \(error)")
            }
            else if snapshot.exists() {
                print("Got data \(snapshot.value!)")
            }
            else {
                print("No data available")
            }
        }*/
    }
}
