//
//  MemoDetailInteractor.swift
//  MemoCloneApp
//
//  Created by MUN JEONG SEO on 2021/02/08.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase
import FirebaseAuth

protocol MemoDetailBusinessLogic {
    func fetchMemoData()
    func requestSaveMemoData(request: MemoDetail.저장.Request, key: String?)
}

extension MemoDetailBusinessLogic {
    func requestSaveMemoData(request: MemoDetail.저장.Request, key: String? = nil) {
        requestSaveMemoData(request: request, key: key)
    }
}

protocol MemoDetailDataStore {
    var uid: String? { get set }
    var memoData: MemoData? { get set }
}

class MemoDetailInteractor: MemoDetailBusinessLogic, MemoDetailDataStore {
    var presenter: MemoDetailPresentationLogic?
    var worker = MemoDetailWorker()
    var uid: String?
    var memoData: MemoData?
        
    // MARK: Do something
    func fetchMemoData() {
        let isNewMemo: Bool = self.memoData == nil ? true : false
        self.presenter?.presentFetchData(response: MemoDetail.데이터_패치.Response(isNewMemo: isNewMemo, memoData: self.memoData))
    }
    
    func requestSaveMemoData(request: MemoDetail.저장.Request, key: String? = nil) {
        worker.saveMemo(uid: self.uid, memoData: request.memoData, key: key, completionHandler: {(ref, error) in
            if error != nil {
                self.presenter?.presentSave(response: .init(isSaveSuccess: false))
            } else {
                self.presenter?.presentSave(response: .init(isSaveSuccess: true))
            }
        })
    }
}
